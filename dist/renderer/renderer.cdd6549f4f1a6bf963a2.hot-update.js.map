{"version":3,"file":"renderer.cdd6549f4f1a6bf963a2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAsC;AACN;AACsC;AAC7B;AAClC,wBAAwB,oDAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,8CAAO;AAClB;AACA,4BAA4B,wDAAW;AACvC,mBAAmB,iEAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,YAAY,iDAAM;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;UCxDA","sources":["webpack://remotion-editor/./src/renderer/contexts/TimelineContext.tsx","webpack://remotion-editor/webpack/runtime/getFullHash"],"sourcesContent":["import { createContext } from 'react';\nimport { produce } from 'immer';\nimport { ActionTypes, initialTimelineState } from '../types/timeline';\nimport { logger } from '../utils/logger';\nexport const TimelineContext = createContext(undefined);\nconst NON_UNDOABLE_ACTIONS = new Set([\n    'SET_CURRENT_TIME',\n    'SET_PLAYING',\n    'SET_SCROLL_X',\n    'SET_SCROLL_Y',\n    'SET_DRAGGING',\n    'SET_ERROR',\n    'RESTORE_SNAPSHOT',\n    'SET_IS_PLAYING',\n    'SET_IS_DRAGGING',\n    'SET_SELECTED_CLIP_IDS',\n    'SELECT_CLIPS',\n    'SET_SELECTED_TRACK_ID',\n    'SET_DURATION',\n    'CLEAR_STATE'\n]);\nconst CHECKPOINT_ACTIONS = new Set([\n    'ADD_TRACK',\n    'REMOVE_TRACK',\n    'ADD_CLIP',\n    'REMOVE_CLIP',\n    'SPLIT_CLIP',\n    'SET_TRACKS',\n    'MOVE_TRACK',\n    'MOVE_CLIP'\n]);\nexport const timelineReducer = (state, action) => {\n    return produce(state, draft => {\n        // Add explicit handling for CLEAR_STATE\n        if (action.type === ActionTypes.CLEAR_STATE) {\n            return initialTimelineState;\n        }\n        let shouldCreateHistoryEntry = false;\n        let historyDescription = '';\n        let beforeState = state;\n        let isCheckpoint = false;\n        if (!NON_UNDOABLE_ACTIONS.has(action.type)) {\n            shouldCreateHistoryEntry = true;\n            historyDescription = getHistoryDescription(action);\n            beforeState = { ...state };\n            isCheckpoint = CHECKPOINT_ACTIONS.has(action.type);\n            logger.debug('Processing action:', {\n                type: action.type,\n                isCheckpoint,\n                description: historyDescription\n            });\n        }\n        // Rest of the reducer implementation remains the same...\n    });\n    // Rest of the reducer implementation remains the same...\n};\n// Rest of the reducer implementation remains the same...\n","__webpack_require__.h = () => (\"c1d9909b0eec6e01c834\")"],"names":[],"sourceRoot":""}