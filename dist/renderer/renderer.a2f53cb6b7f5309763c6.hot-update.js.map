{"version":3,"file":"renderer.a2f53cb6b7f5309763c6.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA0B;AACoC;AACA;AACK;AACtB;AACM;AACU;AACtD;AACP,YAAY,0DAAmB,CAAC,uEAAgB;AAChD,QAAQ,0DAAmB,CAAC,uEAAgB;AAC5C,YAAY,0DAAmB,UAAU,gEAAgE;AACzG,gBAAgB,0DAAmB,UAAU,0BAA0B;AACvE,oBAAoB,0DAAmB,CAAC,4DAAQ,IAAI,wBAAwB;AAC5E,gBAAgB,0DAAmB,UAAU,uBAAuB;AACpE,oBAAoB,0DAAmB,UAAU,sBAAsB;AACvE,wBAAwB,0DAAmB,UAAU,4BAA4B;AACjF,4BAA4B,0DAAmB,CAAC,4DAAS;AACzD,wBAAwB,0DAAmB,UAAU,0BAA0B;AAC/E,4BAA4B,0DAAmB,CAAC,sEAAc;AAC9D,oBAAoB,0DAAmB,UAAU,2BAA2B;AAC5E,wBAAwB,0DAAmB,CAAC,4EAAiB;AAC7D;AACA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;;;;;;;ACtB6D;AAC1C;AACgC;AAC7B;AAC2B;AACpE;AACA,oDAAa;AACN,wBAAwB,oDAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA,aAAa,wDAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,UAAU;AAC7C,8BAA8B,iDAAU;AACxC,WAAW,iEAAoB;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAM;AAClB;AACA,0BAA0B;AAC1B,aAAa;AACb;AACA,KAAK;AACL,QAAQ,IAAuE;AAC/E,QAAQ,gDAAS;AACjB;AACA;AACA,SAAS;AACT;AACA,IAAI,gDAAS;AACb;AACA,qCAAqC,gFAAqB;AAC1D;AACA,gBAAgB,iDAAM;AACtB;AACA;AACA;AACA;AACA,YAAY,iDAAM;AAClB;AACA,KAAK;AACL,YAAY,0DAAmB,6BAA6B,SAAS,mBAAmB;AACxF;AACO;AACP,oBAAoB,iDAAU;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnHmC;AAC2B;AACvD;AACP,oBAAoB,iDAAU,CAAC,sEAAe;AAC9C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,8CAA8C,OAAO;AACrD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;UChFA","sources":["webpack://remotion-editor/./src/renderer/App.tsx","webpack://remotion-editor/./src/renderer/contexts/TimelineContext.tsx","webpack://remotion-editor/./src/renderer/hooks/useTimelineContext.ts","webpack://remotion-editor/./src/renderer/utils/timelineValidation.ts","webpack://remotion-editor/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport { TimelineProvider } from './contexts/TimelineContext';\nimport { MediaBinProvider } from './contexts/MediaBinContext';\nimport { TimelineContainer } from './components/TimelineContainer';\nimport MediaBin from './components/MediaBin';\nimport { Inspector } from './components/Inspector';\nimport { PreviewDisplay } from './components/PreviewDisplay';\nexport const App = () => {\n    return (React.createElement(TimelineProvider, null,\n        React.createElement(MediaBinProvider, null,\n            React.createElement(\"div\", { className: \"app-container app-root\", \"data-testid\": \"app-root\" },\n                React.createElement(\"div\", { className: \"app-sidebar\" },\n                    React.createElement(MediaBin, { className: \"media-bin\" })),\n                React.createElement(\"div\", { className: \"app-main\" },\n                    React.createElement(\"div\", { className: \"app-top\" },\n                        React.createElement(\"div\", { className: \"app-inspector\" },\n                            React.createElement(Inspector, null)),\n                        React.createElement(\"div\", { className: \"app-preview\" },\n                            React.createElement(PreviewDisplay, null))),\n                    React.createElement(\"div\", { className: \"app-timeline\" },\n                        React.createElement(TimelineContainer, null)))))));\n};\nexport default App;\n","import React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport { enablePatches } from 'immer';\nimport { ActionTypes, initialTimelineState } from '../types/timeline';\nimport { logger } from '../utils/logger';\nimport { validateTimelineState } from '../utils/timelineValidation';\n// Enable patches for Immer\nenablePatches();\nexport const TimelineContext = createContext(undefined);\nconst NON_UNDOABLE_ACTIONS = new Set([\n    'SET_CURRENT_TIME',\n    'SET_PLAYING',\n    'SET_SCROLL_X',\n    'SET_SCROLL_Y',\n    'SET_DRAGGING',\n    'SET_ERROR',\n    'RESTORE_SNAPSHOT',\n    'SET_IS_PLAYING',\n    'SET_IS_DRAGGING',\n    'SELECT_CLIPS',\n    'SET_SELECTED_TRACK_ID',\n    'SET_DURATION',\n    'CLEAR_STATE',\n    'SET_STATE',\n    'SET_TRACKS',\n    'SET_SHOW_WAVEFORMS',\n    'SET_SHOW_KEYFRAMES',\n    'SET_SHOW_TRANSITIONS',\n    'SET_SHOW_EFFECTS',\n    'SET_RENDER_QUALITY',\n    'SET_SNAPPING',\n    'SELECT_TRACK',\n    'SELECT_CAPTIONS',\n    'PUSH_HISTORY',\n    'SET_HISTORY_INDEX',\n    'CLEAR_HISTORY'\n]);\nconst getHistoryDescription = (action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_TRACK:\n            return 'Add track';\n        case ActionTypes.REMOVE_TRACK:\n            return 'Remove track';\n        case ActionTypes.ADD_CLIP:\n            return 'Add clip';\n        case ActionTypes.REMOVE_CLIP:\n            return 'Remove clip';\n        case ActionTypes.MOVE_CLIP:\n            return 'Move clip';\n        case ActionTypes.SPLIT_CLIP:\n            return 'Split clip';\n        case ActionTypes.TRIM_CLIP:\n            return 'Trim clip';\n        case ActionTypes.SET_ZOOM:\n            return 'Change zoom';\n        case ActionTypes.SET_FPS:\n            return 'Change FPS';\n        default:\n            return action.type;\n    }\n};\nconst isUndoable = (action) => {\n    return !NON_UNDOABLE_ACTIONS.has(action.type);\n};\n// ... (rest of the file remains the same as in your previous update)\nexport const TimelineProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(timelineReducer, {\n        ...initialTimelineState,\n        history: {\n            entries: [],\n            currentIndex: -1\n        }\n    });\n    useEffect(() => {\n        try {\n            window.dispatchEvent(new CustomEvent('timeline:initializing'));\n            window.timelineDispatch = dispatch;\n            window.timelineState = state;\n            window.dispatchEvent(new CustomEvent('timeline:dispatchReady'));\n            window.timelineReady = true;\n            window.dispatchEvent(new CustomEvent('timeline:initialized'));\n        }\n        catch (error) {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            logger.error('[TimelineProvider] Error initializing timeline:', new Error(errorMessage));\n            window.dispatchEvent(new CustomEvent('timeline:error', {\n                detail: { error: new Error(errorMessage) }\n            }));\n        }\n    }, []);\n    if (process.env.NODE_ENV !== 'production' || process.env.CYPRESS === 'true') {\n        useEffect(() => {\n            window.timelineState = state;\n            window.timelineDispatch = dispatch;\n        }, [state, dispatch]);\n    }\n    useEffect(() => {\n        try {\n            const validationErrors = validateTimelineState(state);\n            if (validationErrors.length > 0) {\n                logger.warn('[Timeline] State validation errors:', validationErrors);\n            }\n        }\n        catch (error) {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            logger.error('[Timeline] State validation failed:', new Error(errorMessage));\n        }\n    }, [state]);\n    return (React.createElement(TimelineContext.Provider, { value: { state, dispatch } }, children));\n};\nexport const useTimelineContext = () => {\n    const context = useContext(TimelineContext);\n    if (!context) {\n        throw new Error('useTimelineContext must be used within a TimelineProvider');\n    }\n    return context;\n};\n","import { useContext } from 'react';\nimport { TimelineContext } from '../contexts/TimelineContext';\nexport const useTimelineContext = () => {\n    const context = useContext(TimelineContext);\n    if (!context) {\n        throw new Error('useTimelineContext must be used within a TimelineProvider');\n    }\n    return context;\n};\n","/**\n * Validates the timeline state structure and returns any validation errors\n */\nexport function validateTimelineState(state) {\n    const errors = [];\n    // Check required properties\n    if (!state) {\n        errors.push('Timeline state is undefined');\n        return errors;\n    }\n    // Check tracks array\n    if (!Array.isArray(state.tracks)) {\n        errors.push('Tracks must be an array');\n    }\n    else {\n        // Validate each track\n        state.tracks.forEach((track, index) => {\n            if (!track.id) {\n                errors.push(`Track at index ${index} is missing id`);\n            }\n            if (!track.name) {\n                errors.push(`Track at index ${index} is missing name`);\n            }\n            if (!track.type) {\n                errors.push(`Track at index ${index} is missing type`);\n            }\n            if (!Array.isArray(track.clips)) {\n                errors.push(`Track at index ${index} clips must be an array`);\n            }\n        });\n    }\n    // Check numeric properties\n    if (typeof state.currentTime !== 'number') {\n        errors.push('currentTime must be a number');\n    }\n    if (typeof state.duration !== 'number') {\n        errors.push('duration must be a number');\n    }\n    if (typeof state.zoom !== 'number') {\n        errors.push('zoom must be a number');\n    }\n    if (typeof state.fps !== 'number') {\n        errors.push('fps must be a number');\n    }\n    if (typeof state.scrollX !== 'number') {\n        errors.push('scrollX must be a number');\n    }\n    if (typeof state.scrollY !== 'number') {\n        errors.push('scrollY must be a number');\n    }\n    // Check boolean properties\n    if (typeof state.isPlaying !== 'boolean') {\n        errors.push('isPlaying must be a boolean');\n    }\n    if (typeof state.isDragging !== 'boolean') {\n        errors.push('isDragging must be a boolean');\n    }\n    // Check arrays\n    if (!Array.isArray(state.selectedClipIds)) {\n        errors.push('selectedClipIds must be an array');\n    }\n    if (!Array.isArray(state.selectedCaptionIds)) {\n        errors.push('selectedCaptionIds must be an array');\n    }\n    if (!Array.isArray(state.markers)) {\n        errors.push('markers must be an array');\n    }\n    // Check history\n    if (!state.history) {\n        errors.push('history is missing');\n    }\n    else {\n        if (!Array.isArray(state.history.entries)) {\n            errors.push('history.entries must be an array');\n        }\n        if (typeof state.history.currentIndex !== 'number') {\n            errors.push('history.currentIndex must be a number');\n        }\n    }\n    return errors;\n}\n","__webpack_require__.h = () => (\"2ab1f8d422e75aa749ff\")"],"names":[],"sourceRoot":""}